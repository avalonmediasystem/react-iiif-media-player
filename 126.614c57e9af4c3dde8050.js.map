{"version":3,"sources":["webpack:///./node_modules/iiif-explorer/dist/esm-es5/ion-split-pane-md.entry.js"],"names":["QUERY","SplitPane","hostRef","this","visible","disabled","when","ionSplitPaneVisible","prototype","visibleChanged","detail","isPane","bind","emit","connectedCallback","styleChildren","updateState","disconnectedCallback","rmL","undefined","_this","query","mediaQuery","length","window","matchMedia","callback_1","q","matches","mediaList_1","addListener","removeListener","element","parentElement","el","classList","contains","contentId","children","nu","childElementCount","foundMain","i","child","isMain","id","console","warn","setPaneClass","render","_a","mode","class","Object","defineProperty","get","enumerable","configurable","toAdd","toRemove","add","remove"],"mappings":"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","file":"126.614c57e9af4c3dde8050.js","sourcesContent":["import { r as registerInstance, c as createEvent, e as getIonMode, h, H as Host, d as getElement } from './core-0428d3c8.js';\r\nvar SPLIT_PANE_MAIN = 'split-pane-main';\r\nvar SPLIT_PANE_SIDE = 'split-pane-side';\r\nvar QUERY = {\r\n    'xs': '(min-width: 0px)',\r\n    'sm': '(min-width: 576px)',\r\n    'md': '(min-width: 768px)',\r\n    'lg': '(min-width: 992px)',\r\n    'xl': '(min-width: 1200px)',\r\n    'never': ''\r\n};\r\nvar SplitPane = /** @class */ (function () {\r\n    function SplitPane(hostRef) {\r\n        registerInstance(this, hostRef);\r\n        this.visible = false;\r\n        /**\r\n         * If `true`, the split pane will be hidden.\r\n         */\r\n        this.disabled = false;\r\n        /**\r\n         * When the split-pane should be shown.\r\n         * Can be a CSS media query expression, or a shortcut expression.\r\n         * Can also be a boolean expression.\r\n         */\r\n        this.when = QUERY['lg'];\r\n        this.ionSplitPaneVisible = createEvent(this, \"ionSplitPaneVisible\", 7);\r\n    }\r\n    SplitPane.prototype.visibleChanged = function (visible) {\r\n        var detail = { visible: visible, isPane: this.isPane.bind(this) };\r\n        this.ionSplitPaneVisible.emit(detail);\r\n    };\r\n    SplitPane.prototype.connectedCallback = function () {\r\n        this.styleChildren();\r\n        this.updateState();\r\n    };\r\n    SplitPane.prototype.disconnectedCallback = function () {\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n    };\r\n    SplitPane.prototype.updateState = function () {\r\n        var _this = this;\r\n        if (this.rmL) {\r\n            this.rmL();\r\n            this.rmL = undefined;\r\n        }\r\n        // Check if the split-pane is disabled\r\n        if (this.disabled) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        // When query is a boolean\r\n        var query = this.when;\r\n        if (typeof query === 'boolean') {\r\n            this.visible = query;\r\n            return;\r\n        }\r\n        // When query is a string, let's find first if it is a shortcut\r\n        var mediaQuery = QUERY[query] || query;\r\n        // Media query is empty or null, we hide it\r\n        if (mediaQuery.length === 0) {\r\n            this.visible = false;\r\n            return;\r\n        }\r\n        if (window.matchMedia) {\r\n            // Listen on media query\r\n            var callback_1 = function (q) {\r\n                _this.visible = q.matches;\r\n            };\r\n            var mediaList_1 = window.matchMedia(mediaQuery);\r\n            mediaList_1.addListener(callback_1);\r\n            this.rmL = function () { return mediaList_1.removeListener(callback_1); };\r\n            this.visible = mediaList_1.matches;\r\n        }\r\n    };\r\n    SplitPane.prototype.isPane = function (element) {\r\n        if (!this.visible) {\r\n            return false;\r\n        }\r\n        return element.parentElement === this.el\r\n            && element.classList.contains(SPLIT_PANE_SIDE);\r\n    };\r\n    SplitPane.prototype.styleChildren = function () {\r\n        var contentId = this.contentId;\r\n        var children = this.el.children;\r\n        var nu = this.el.childElementCount;\r\n        var foundMain = false;\r\n        for (var i = 0; i < nu; i++) {\r\n            var child = children[i];\r\n            var isMain = contentId !== undefined && child.id === contentId;\r\n            if (isMain) {\r\n                if (foundMain) {\r\n                    console.warn('split pane cannot have more than one main node');\r\n                    return;\r\n                }\r\n                foundMain = true;\r\n            }\r\n            setPaneClass(child, isMain);\r\n        }\r\n        if (!foundMain) {\r\n            console.warn('split pane does not have a specified main node');\r\n        }\r\n    };\r\n    SplitPane.prototype.render = function () {\r\n        var _a;\r\n        var mode = getIonMode(this);\r\n        return (h(Host, { class: (_a = {},\r\n                _a[mode] = true,\r\n                // Used internally for styling\r\n                _a[\"split-pane-\" + mode] = true,\r\n                _a['split-pane-visible'] = this.visible,\r\n                _a) }, h(\"slot\", null)));\r\n    };\r\n    Object.defineProperty(SplitPane.prototype, \"el\", {\r\n        get: function () { return getElement(this); },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SplitPane, \"watchers\", {\r\n        get: function () {\r\n            return {\r\n                \"visible\": [\"visibleChanged\"],\r\n                \"disabled\": [\"updateState\"],\r\n                \"when\": [\"updateState\"]\r\n            };\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SplitPane, \"style\", {\r\n        get: function () { return \":host{--side-width:100%;left:0;right:0;top:0;bottom:0;display:-ms-flexbox;display:flex;position:absolute;-ms-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;flex-wrap:nowrap;contain:strict}::slotted(ion-menu.menu-pane-visible){-ms-flex:0 1 auto;flex:0 1 auto;width:var(--side-width);min-width:var(--side-min-width);max-width:var(--side-max-width)}:host(.split-pane-visible) ::slotted(.split-pane-main),:host(.split-pane-visible) ::slotted(.split-pane-side){left:0;right:0;top:0;bottom:0;position:relative;-webkit-box-shadow:none!important;box-shadow:none!important;z-index:0}:host(.split-pane-visible) ::slotted(.split-pane-main){-ms-flex:1;flex:1}:host(.split-pane-visible) ::slotted(.split-pane-side:not(ion-menu)),:host(.split-pane-visible) ::slotted(ion-menu.split-pane-side.menu-enabled){display:-ms-flexbox;display:flex;-ms-flex-negative:0;flex-shrink:0}::slotted(.split-pane-side:not(ion-menu)){display:none}:host(.split-pane-visible) ::slotted(.split-pane-side){-ms-flex-order:-1;order:-1}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){-ms-flex-order:1;order:1}:host{--border:1px solid var(--ion-item-border-color,var(--ion-border-color,var(--ion-color-step-150,rgba(0,0,0,0.13))));--side-min-width:270px;--side-max-width:28%}:host(.split-pane-visible) ::slotted(.split-pane-side){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:var(--border);border-left:0}:host(.split-pane-visible) ::slotted(.split-pane-side[side=end]){min-width:var(--side-min-width);max-width:var(--side-max-width);border-right:0;border-left:var(--border)}\"; },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return SplitPane;\r\n}());\r\nvar setPaneClass = function (el, isMain) {\r\n    var toAdd;\r\n    var toRemove;\r\n    if (isMain) {\r\n        toAdd = SPLIT_PANE_MAIN;\r\n        toRemove = SPLIT_PANE_SIDE;\r\n    }\r\n    else {\r\n        toAdd = SPLIT_PANE_SIDE;\r\n        toRemove = SPLIT_PANE_MAIN;\r\n    }\r\n    var classList = el.classList;\r\n    classList.add(toAdd);\r\n    classList.remove(toRemove);\r\n};\r\nexport { SplitPane as ion_split_pane };\r\n"],"sourceRoot":""}